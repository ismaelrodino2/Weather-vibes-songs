{"version":3,"sources":["components/Loading.jsx","templates/Shazam.js","components/Menu.jsx","components/Background.jsx","templates/App.js","reportWebVitals.js","index.js","templates/Data.js"],"names":["Loading","load","className","size","Shazam","temp","city","useState","songs","setSongs","term","setTerm","setLoad","useEffect","undefined","options","method","url","params","locale","headers","process","axios","request","then","response","data","hints","catch","error","console","log","onClick","map","el","index","today","Date","time","getHours","getMinutes","getSeconds","localStorage","setItem","JSON","stringify","clear","Menu","to","Background","children","Style","App","temperature","setTemperature","setCity","setData","a","get","res","main","text","onChange","e","value","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","setTemp","getItem","storedSongs","parse","document","getElementById"],"mappings":"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","file":"static/js/main.68a118f0.chunk.js","sourcesContent":["import { AiOutlineLoading } from \"react-icons/ai\";\n\nexport function Loading({ load }) {\n  return load ? (\n    <div className=\"flex items-center justify-center text-white bg-black h-96 \">\n      <div className=\"animate-spin\">\n        <AiOutlineLoading size={36} />\n      </div>\n    </div>\n  ) : (\n    <p>Coloque dados</p>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Loading } from \"../components/Loading\";\n\nexport function Shazam({ temp, city }) {\n  const [songs, setSongs] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const [load, setLoad] = useState(false);\n\n  useEffect(() => {\n    setSongs(undefined);\n    var options = {\n      method: \"GET\",\n      url: \"https://shazam.p.rapidapi.com/auto-complete\",\n      params: { term: term, locale: \"en-US\" },\n      headers: {\n        \"x-rapidapi-host\": \"shazam.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_SHAZAM_KEY,\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        setSongs(response.data.hints);\n      })\n      .catch(function (error) {\n        console.log(\"erro\");\n      });\n  }, [term]);\n\n  function handleButton() {\n    setLoad(true);\n    if (temp > 32) {\n      setTerm(\"rock\");\n    } else if (temp > 24 && temp < 32) {\n      setTerm(\"pop\");\n    } else if (temp > 16 && temp < 24) {\n      setTerm(\"classic\");\n    } else if (temp < 16) {\n      setTerm(\"lofi\");\n      console.log(term);\n    }\n  }\n\n  function save() {\n    var today = new Date();\n    var time =\n    today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n\n    localStorage.setItem(\"cidade\", city);\n    localStorage.setItem(\"temperatura\", temp);\n    localStorage.setItem(\"horário\", time);\n    localStorage.setItem(\"gênero\", term);\n    localStorage.setItem(\"musicas\", JSON.stringify(songs));\n  }\n  function clear() {\n    localStorage.clear();\n  }\n\n  return (\n    <div>\n      <button onClick={handleButton}>Search</button>\n      <div>\n        {songs === undefined ? (\n          <Loading load={load} />\n        ) : (\n          songs.map((el, index) => (\n            <div key={index}>\n              <h1>{el.term}</h1>\n            </div>\n          ))\n        )}\n      </div>\n      <button onClick={save}>salvar no storage</button>\n      <button onClick={clear}>limpar storage</button> <br />\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\nimport App from \"../templates/App\";\n\nexport function Menu() {\n  return (\n    <div className=\"bg-blue-500\">\n      <ul>\n        <Link to=\"/\">Pesquisar</Link>\n        <Link to=\"/saved-data\">Visualizar</Link>\n      </ul>\n    </div>\n  );\n}\n","export function Background({ children, temp }) {\n  var img = \"\";\n  if (temp >= 26) {\n    img = \"/beach.jpg\";\n  } else if (temp > 0 && temp < 26) {\n    img = \"/mild.jpg\";\n  } else if (temp <= 0) {\n    img = \"/cold.jpg\";\n  }\n\n  return (\n    <div\n      Style={`backgroundImage: \"url(/beach.png)`}\n      className=\"\"\n    >\n      {children}\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport { Shazam } from \"./Shazam\";\nimport { Menu } from \"../components/Menu\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport { Background } from \"../components/Background\";\n\nfunction App() {\n  const [temperature, setTemperature] = useState();\n\n  const [city, setCity] = useState(\"\");\n\n  const [data, setData] = useState([]);\n\n\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const res = await axios.get(\n          `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`\n        );\n        setTemperature(res.data.main.temp);\n        setData(res.data);\n        console.log(data);\n\n      } catch (e) {\n        setData(undefined);\n      }\n    };\n\n    load();\n  }, []);\n\n  console.log(data)\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setCity(value);\n    setTemperature(null);\n  };\n\n  if (data === undefined) {\n    var text = <h1>Digite o nome de uma cidade</h1>;\n  }\n\n\n  return (\n    <Background temp={temperature}>\n    <div>\n      <input\n        onChange={handleChange}\n        type=\"search\"\n        className=\"p-2 bg-gray-300\"\n      />\n      {text} <br />\n      {city} <br />\n      <h1>\n        {temperature}\n        {temperature ? <span>&#8451;</span> : \"\"}\n      </h1>\n      <Shazam temp={temperature} city={city} />\n    </div>\n    </Background>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./templates/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Shazam } from \"./templates/Shazam\";\nimport { ThemeProvider } from \"./providers/ThemeContext\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Switch, Route} from 'react-router-dom'\nimport { Data } from \"./templates/Data\";\nimport { Menu } from \"./components/Menu\";\n\nReactDOM.render(\n  <BrowserRouter>\n  <Menu />\n    <Switch>\n      <Route exact path=\"/saved-data\" component={Data} />\n      <Route exact path=\"/\" component={App} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nexport function Data() {\n  const [city, setCity] = useState();\n  const [temp, setTemp] = useState();\n  const [songs, setSongs] = useState();\n\n  useEffect(() => {\n    setCity(localStorage.getItem(\"cidade\"));\n    setTemp(localStorage.getItem(\"temperatura\"));\n    setTemp(localStorage.getItem(\"gênero\"));\n    var storedSongs = JSON.parse(localStorage.getItem(\"musicas\"));\n    setSongs(storedSongs)\n  }, []);\n\n  if (songs === undefined) {\n    return <h1>carregando</h1>;\n  }\n  return (\n    <div className=\"bg-green-600\">\n      <h1>cidade</h1> <br />\n      <p>\n        {city}\n        {temp}\n      </p>\n      {songs.map((el, index) => (\n        <div key={index}>\n          <h1>{el.term}</h1>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"sourceRoot":""}